[gd_resource type="ShaderMaterial" load_steps=7 format=2]

[ext_resource path="res://images/raw/block_sheet.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeInput" id=1]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=2]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeVectorOp" id=3]
operator = 3

[sub_resource type="VisualShaderNodeVec3Constant" id=4]
output_port_for_preview = 0
constant = Vector3( 4, 4, 4 )

[sub_resource type="VisualShader" id=5]
code = "shader_type spatial;
uniform sampler2D tex_frg_4;


void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0;
	n_out3p0 = vec3(UV,0.0);

// Vector:7
	vec3 n_out7p0;
	n_out7p0 = vec3(4.000000,4.000000,4.000000);

// VectorOp:6
	vec3 n_out6p0;
	n_out6p0 = n_out3p0 / n_out7p0;

// Texture:4
	vec3 n_out4p0;
	float n_out4p1;
	vec4 tex_frg_4_read = texture( tex_frg_4 , n_out6p0.xy );
	n_out4p0 = tex_frg_4_read.rgb;
	n_out4p1 = tex_frg_4_read.a;

// Output:0
	ALBEDO = n_out4p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 0, 150 )
nodes/fragment/0/position = Vector2( 960, 160 )
nodes/fragment/3/node = SubResource( 1 )
nodes/fragment/3/position = Vector2( 40, 80 )
nodes/fragment/4/node = SubResource( 2 )
nodes/fragment/4/position = Vector2( 740, 200 )
nodes/fragment/6/node = SubResource( 3 )
nodes/fragment/6/position = Vector2( 320, 160 )
nodes/fragment/7/node = SubResource( 4 )
nodes/fragment/7/position = Vector2( 40, 240 )
nodes/fragment/connections = PoolIntArray( 4, 0, 0, 0, 3, 0, 6, 0, 7, 0, 6, 1, 6, 0, 4, 0 )

[resource]
shader = SubResource( 5 )

